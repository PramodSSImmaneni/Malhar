Fraud detection demo processes incoming credit card transactions and looks for fraudulent transactions. Each transaction
has credit card number that was used for the transaction, the bank information for the card, the merchant info of the
merchant where the transaction happened, the terminal id of the terminal where the card was used and the amount of the
transaction.

The application looks for different fraudulent transaction patterns in the incoming transaction stream. They are a small
transaction amount followed by a large transaction amount for the same credit card within a 30s interval, a large number
of transactions being performed from the same terminal id at a merchant using the same bank information in a 30s
interval and a large difference between the amount of a transaction and the average amount of transactions in last 30s
from the same terminal id at a merchant.

The application generates alerts whenever fraudulent transactions are detected. These alerts are published via a web
socket and can be received by anyone subscribed to the web socket. Additionally the application also allows users to
submit custom user transactions via an input webs socket for demo purposes.

The application saves all the alerts to MongoDB. Additionally it also stores statistics information for the transactions
such as moving average and range per merchant info and terminal id to the database. It also spools all the incoming
transactions to HDFS which can be used as a transaction log.

The UI for the application shows the running count of the total number of transactions, amounts and frauds detected.
It has the facility to generate the three types of fraudulent transactions described above for demo purposes. These
transactions are sent to the application via the input socket. The alerts generated by the application are received by
the UI via a web socket and shown on the screen. The UI can additionally also query the MongoDB to get the transaction
statistics.